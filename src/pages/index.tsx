import Head from "next/head";
import { useEffect, useRef, useState } from "react";

import { Quiz } from "../components/Quiz";
import AnswerModel from "../models/answer";
import QuestionModel from "../models/question";

import styles from "../styles/Home.module.scss";

const questionTest = new QuestionModel(1, "Qual Ã© a melhor cor?", [
  AnswerModel.isWrong("Verde"),
  AnswerModel.isWrong("Vermelha"),
  AnswerModel.isWrong("Azul"),
  AnswerModel.isCorrect("Preta"),
]);

const BASE_URL = "http://localhost:3000/api";

export default function Home() {
  const [question, setQuestion] = useState<QuestionModel>(questionTest);
  const [questionsIds, setQuestionsIds] = useState<number[]>([]);
  const [rightQuestions, setRightQuestions] = useState<number>(0);
  const questionRef = useRef<QuestionModel>();

  async function loadQuestionIds() {
    const response = await fetch(`${BASE_URL}/quiz`);
    const questionIds = await response.json();
    // console.log("ðŸš€ ~ questionIds", questionIds);

    setQuestionsIds(questionIds);
  }

  async function loadQuestion(questionId: number) {
    const response = await fetch(`${BASE_URL}/questions/${questionId}`);
    const question = await response.json();
    const newQuestion = QuestionModel.createInstanceFromObject(question);
    setQuestion(newQuestion);
  }

  useEffect(() => {
    loadQuestionIds();
    // questionRef.current = question;
  }, []);

  useEffect(() => {
    if (questionsIds.length > 0) {
      loadQuestion(questionsIds[0]);
    }
  }, [questionsIds]);

  function handleAnsweredQuestion(answeredQuestion: QuestionModel) {
    setQuestion(answeredQuestion);
    const isRight = answeredQuestion.isRight;
    setRightQuestions(rightQuestions + (isRight ? 1 : 0));
  }

  function handleNextQuestion() {}

  return (
    <div className={styles.container}>
      <Head>
        <title>Next Quiz | Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Quiz
        question={question}
        lastQuestion={true}
        handleAnsweredQuestion={handleAnsweredQuestion}
        handleNextQuestion={handleNextQuestion}
      />
    </div>
  );
}
